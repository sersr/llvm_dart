import '../lib/d.kc';


fn main(argc: usize, argv:  **u8) i32 {
    let arr = CArray { argc, argv };
    let size = arr.getSize();

    let y = 0u64;

    printf('new start %d\n', size);
    let new_arr = Array<i32>.new(10);

    let new_max = new_arr.getSize() as i32;

    let y = 0;
    printf('size: %d\n', new_max);
    while y < new_max {
        let yy = y + 1;
       new_arr.elementAt(y) = yy;
       printf("%d\n", new_arr.elementAt(y));
        y += 1;

        printf('y: %d\n', y);
    }

   // y -= 1;
    //while y >= 0 {
      //  printf("newx: %d\n", new_arr.elementAt(y));
      //  y -= 1;
    //}

    let i = 0;
    loop {
        if i > 30 {
            break;
        }
     //   printf('i: %d\n', i);
        i += 1;
    }
    0;
}