
import 'd.kc';

type HeapPointer<T> = *HeapCount<T>;

struct HeapCount<T> {
  count: usize,
  data: T,
}

impl HeapCount<T> {

  fn addStack() {
    self.count += 1;
    printf("hello add %d\n", self.count);
  }

  fn removeStack() {
    self.count -= 1;
    printf('remove %d\n', self.count);
    if self.count == 0 {
      free(&self);
    }
  }
}

extern fn malloc(size: usize) *void;
extern fn free(ptr: *void);