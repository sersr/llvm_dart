import 'd.kc';

fn main() i32 {
  let value = apiFnRet64Float();
  printf("return value: %lf, x: %lf\n", value.y, value.x);

  let s = test_sret();
  printf('sret: %d, x: %d, z: %d, f: %d\n', s.y, s.x, s.z, s.f);
  0;
}

extern struct Base {
  y: f64,
  x: f64,
}

extern 
fn c_fn(base: Base) {
  printf("value: %lf\n", base.y);
}

extern
fn c_fn_value() Base {

  Base {111, 222}
}
extern
fn apiFnRet128() Base;

extern
fn apiFn128(base: Base);


extern struct Base64Float {
  y: f32,
  c: u8,
  x: f32,
}
extern
fn apiFnRet64Float() Base64Float;


extern struct SRet {
  y: i32,
  x: i32,
  z: i64,
  f: i64,
}
extern
fn test_sret() SRet {
  SRet { 10, 20, 30, 40};
}