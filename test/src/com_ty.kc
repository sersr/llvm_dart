import 'd.kc';

struct Gen {
    y: i32,
    s: string,
}

com Print {
  fn printx();
}

impl Print:test for Gen {
  fn printx() {
    print(self.s);
	}
}

fn hello<T>(y: &T) {
  y.printx();
}

fn main() i32 {
  let g = Gen { 10 , &"hello"};
 hello(&g);

 let gg = g;

  let hh = hello<Gen>;
  hh(&g);
  let t = ttt;
  t(&g);

  let yaa = g.hh().hh();
  printf("yaa: %d\n", yaa.y);
  let x =  Gen {3};
  let xx = x.xxx();

  init_sig_stack();
  print("end");
  0;
}

fn ttt(y: &Gen) {
  print('base');
}

impl Gen {

  fn hh() &Gen {
    print('hh');
    &self
  }

  fn drop() {
    print("gen drop");
  }

  fn xxx() &i32 {
    let y = 100;
    &y;
  }
}

impl i32 {
  fn drop() {
    print("i32 drop");
  }
}
